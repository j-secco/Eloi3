# ============================================================================
# UR10 Robot Kiosk - Development Docker Compose Override
# ============================================================================
# Development-specific configuration with hot reloading and debugging
# Usage: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up
# ============================================================================

version: '3.8'

services:
  # Robot Server - Development Configuration
  robot-server:
    build:
      target: builder  # Use builder stage for development
    environment:
      - LOG_LEVEL=DEBUG
      - MOCK_MODE=true  # Use mock robot for development
      - RELOAD=true     # Enable auto-reload
      - DEBUG=true
    volumes:
      - ./apps/robot-server:/app:rw  # Mount source code for hot reload
      - ./packages/types/src:/app/types:rw
    ports:
      - "8000:8000"  # Expose port for direct access
    command: ["python", "-m", "uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload", "--log-level", "debug"]

  # Kiosk UI - Development Configuration
  kiosk-ui:
    build:
      target: builder  # Use builder stage
      args:
        VITE_API_BASE_URL: http://localhost:8000
        VITE_WS_URL: ws://localhost:8000
    volumes:
      - ./apps/kiosk-ui:/app:rw  # Mount source code for hot reload
      - ./packages/types:/app/../packages/types:rw
      - /app/node_modules  # Preserve node_modules
    ports:
      - "5173:5173"  # Vite dev server port
    environment:
      - NODE_ENV=development
      - VITE_API_BASE_URL=http://localhost:8000
      - VITE_WS_URL=ws://localhost:8000
    command: ["pnpm", "run", "dev", "--host", "0.0.0.0"]

  # Redis - Development Configuration
  redis:
    ports:
      - "6379:6379"  # Expose Redis port for debugging
    command: redis-server --appendonly yes  # Remove password for development

  # PostgreSQL - Development Configuration
  postgres:
    ports:
      - "5432:5432"  # Expose PostgreSQL port for debugging
    environment:
      - POSTGRES_PASSWORD=dev_password  # Simple password for development
    profiles: []  # Always start in development

  # Development Tools Container
  dev-tools:
    image: node:18-alpine
    container_name: ur10-dev-tools
    working_dir: /workspace
    volumes:
      - .:/workspace:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - ur10-network
    command: ["tail", "-f", "/dev/null"]  # Keep container running
    profiles:
      - dev-tools

  # Test Runner Container
  test-runner:
    build:
      context: .
      dockerfile: tests/Dockerfile
    container_name: ur10-test-runner
    volumes:
      - ./tests:/app/tests:rw
      - ./apps:/app/apps:ro
      - test-results:/app/tests/reports
    networks:
      - ur10-network
    environment:
      - BASE_URL=http://kiosk-ui
      - ROBOT_SERVER_URL=http://robot-server:8000
      - CI=true
    depends_on:
      - kiosk-ui
      - robot-server
    profiles:
      - testing

  # Database Admin (pgAdmin)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: ur10-pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@ur10kiosk.local
      - PGADMIN_DEFAULT_PASSWORD=admin
      - PGADMIN_CONFIG_SERVER_MODE=False
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - ur10-network
    depends_on:
      - postgres
    profiles:
      - dev-tools

  # Redis Commander (Redis GUI)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: ur10-redis-commander
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    networks:
      - ur10-network
    depends_on:
      - redis
    profiles:
      - dev-tools

# Additional volumes for development
volumes:
  test-results:
    driver: local
  pgadmin-data:
    driver: local

